## Changelog

### V1.7
- Complex Context-Aware Emotional Responses
  - Enhanced the emotional response generation to consider user context and previous messages.
  - Improved sentiment analysis for more nuanced interactions.

- Plugin SDK Enhancements
  - Added support for complex plugins that can utilize the new emotional response features.
  - Improved documentation for plugin development.

- Memory Management Improvements
  - Further optimized memory cleanup processes.
  - Enhanced memory persistence options for loaded plugins.

- User Interface Updates
  - Improved UI feedback for emotional responses and plugin actions.
  - Enhanced visual representation of loaded plugins and their statuses.

### V1.6
- Plugin SDK Integration
  - Introduced support for community-made modules via a Plugin SDK.
  - Dynamic loading of plugins from specified directories.
  - Enhanced error handling during plugin loading and execution.
  - Added methods for listing, enabling, and disabling plugins.
  - Improved resource management for loaded plugins.

- Enhanced Memory Management
  - Implemented a more robust memory cleanup process.
  - Added configuration options for memory persistence and cleanup frequency.

- Improved Error Handling
  - Enhanced error handling across various modules, including Discord and Twitch integrations.
  - Added detailed logging for plugin execution errors.

- User Interface Improvements
  - Updated UI to better display loaded plugins and their statuses.
  - Enhanced visual feedback for plugin actions and errors.

### V1.5
- Enhanced Discord Integration
  - Added comprehensive voice channel support:
    - Text-to-speech (TTS) command for voice output.
    - Audio playback from URLs.
    - Voice recording and transcription.
    - Improved voice channel management.
  - New Discord Commands:
    - /tts - Convert text to speech in voice channels.
    - /play - Play audio from URLs.
    - /stop - Stop current audio playback.
    - /help - Detailed command list.
  - Enhanced error handling for voice features.
  - Improved voice connection stability.
  - Better resource management for audio streams.
  - Prevented downloading of entire playlists when a single video URL is provided.
  - Note: This version broke talking output in Discord.

### V1.4
- Fixed critical model initialization bug:
  - Resolved issues with the model not being properly defined in chat handler.
  - Improved error handling for model generation.
  - Added proper cleanup of resources.

### V1.3
- Added advanced Twitch integration:
  - Full Twitch chat interaction support.
  - Per-user memory system that maintains a year of interaction history.
  - Personalized responses based on user chat history.
  - Automatic memory cleanup for interactions older than 365 days.
  - Memory persistence between bot restarts.
  - Enhanced AI parameters for natural chat interaction.

V1.2

- Lorebook messages are now directly infused into the encoding as it is sent.
	- This now sends all relevant lore triggered within the past 3 message sets, instead of just 1 with a required cooldown.
	- Lore triggering requirements were improved, to add plurals and fix edgecases.
	- You can still view what lore is triggered via the UI Logs.
- Random Memories will now trigger before the alarm.
	- This allows your bot to randomly scan your chat history, and remember past times.
	- You can also trigger random memories manually via the UI.

- Your VTuber can now look around, either Following Faces or Randomly.
	- This requires setting up 6 emotes for your VTuber. In order, they should have your VTuber's eyes doing the following (they can be named anything); 
		- "Look Slight Right"
		- "Look Right"
		- "Look Very Right"
		- "Look Slight Left"
		- "Look Left"
		- "Look Very Left"
	- In the .env, change "EYES_FOLLOW" to "Random" or "Faces". Set the "EYES_START_ID" to whatever emote slot the "Look Slight Right" is set up as.
		- Make sure all the eye looking emotes follow eachother in order. You can re-order them in VTube Studio if needed.
	- Obviously, you need a camera for the VTuber to follow faces, as well as the Vision module enabled.

- Other Roleplay Suppression is now disabled if you have "Cutoff at Newlines" off.
	- This will allow the bot to send messages containing character lines, such as "User:" or "Riley:".
	- This is to allow lists, info, and multi-user RP scenarios, if you want.
- Fixed issues with the RAG history desyncing when undoing messages.


---.---.---.---

v1.1-R2

- Fixed a few major bugs:
	- Fixed the "Error" taking over all of the Gradio WebUI
		- Happened due to Gradio & FastAPI dependency conflict (reminder: always vet your stuff~!)
	- Fixed issues with the software failing gently when you have no mic
	- Fixed crashes relating to searching for "Minecraft" logs, it now check to see if the module is enabled first

---.---.---.---

v1.1

- Visual System
	- Toggleable as a module
	- Able to take new images or upload them directly for the AI to see
	- Runs using Ooba, like with the text
		- Can set the port to the existing, default one, or load another instance to dual wield
	- Option to see images before being sent
		- Can retake them
		- Use C/X on the keyboard to confirm
	- Automatically shrinks images to a proper size
- Fixed bits of the Minecraft module
	- Configurable "MinecraftUsername" to set your AI's name (stops feedback loops)
	- Configurable "MinecraftUsernameFollow" to set who your AI follows when doing "#follow"

---.---.---.---

V1.0

- Initial public release of Z-Waif. Contains:
	- WebUI
	- RAG
	- Discord
	- Semi-Minecraft Functionality
	- VTuber Emotes
	- Hotkeys
	- Various other initial release items

---.---.---.---
